// <auto-generated />
using System;
using AccessLogic.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AccessLogic.Migrations
{
    [DbContext(typeof(EcosystemContext))]
    [Migration("20231008204608_Login-Logout")]
    partial class LoginLogout
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Conservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Security")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Conservation");
                });

            modelBuilder.Entity("Domain.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alpha3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Domain.Entities.Ecosystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Area")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("GeoDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ecosystems");
                });

            modelBuilder.Entity("Domain.Entities.Species", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CientificName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("EcosystemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EcosystemId");

                    b.ToTable("Species");
                });

            modelBuilder.Entity("Domain.Entities.Threat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Danger")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("EcosystemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EcosystemId");

                    b.ToTable("Threats");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Entities.Conservation", b =>
                {
                    b.OwnsOne("Domain.ValueObjects.Name", "ConservationName", b1 =>
                        {
                            b1.Property<int>("ConservationId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)");

                            b1.HasKey("ConservationId");

                            b1.HasIndex("Value")
                                .IsUnique();

                            b1.ToTable("Conservation");

                            b1.WithOwner()
                                .HasForeignKey("ConservationId");
                        });

                    b.Navigation("ConservationName")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Country", b =>
                {
                    b.OwnsOne("Domain.ValueObjects.Name", "CountryName", b1 =>
                        {
                            b1.Property<int>("CountryId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)");

                            b1.HasKey("CountryId");

                            b1.HasIndex("Value")
                                .IsUnique();

                            b1.ToTable("Countries");

                            b1.WithOwner()
                                .HasForeignKey("CountryId");
                        });

                    b.Navigation("CountryName")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Ecosystem", b =>
                {
                    b.OwnsOne("Domain.ValueObjects.Name", "EcosystemName", b1 =>
                        {
                            b1.Property<int>("EcosystemId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)");

                            b1.HasKey("EcosystemId");

                            b1.HasIndex("Value")
                                .IsUnique();

                            b1.ToTable("Ecosystems");

                            b1.WithOwner()
                                .HasForeignKey("EcosystemId");
                        });

                    b.Navigation("EcosystemName")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Species", b =>
                {
                    b.HasOne("Domain.Entities.Ecosystem", null)
                        .WithMany("Species")
                        .HasForeignKey("EcosystemId");

                    b.OwnsOne("Domain.ValueObjects.Name", "SpeciesName", b1 =>
                        {
                            b1.Property<int>("SpeciesId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)");

                            b1.HasKey("SpeciesId");

                            b1.HasIndex("Value")
                                .IsUnique();

                            b1.ToTable("Species");

                            b1.WithOwner()
                                .HasForeignKey("SpeciesId");
                        });

                    b.Navigation("SpeciesName")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Threat", b =>
                {
                    b.HasOne("Domain.Entities.Ecosystem", null)
                        .WithMany("Threats")
                        .HasForeignKey("EcosystemId");

                    b.OwnsOne("Domain.ValueObjects.Name", "ThreatName", b1 =>
                        {
                            b1.Property<int>("ThreatId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)");

                            b1.HasKey("ThreatId");

                            b1.HasIndex("Value")
                                .IsUnique();

                            b1.ToTable("Threats");

                            b1.WithOwner()
                                .HasForeignKey("ThreatId");
                        });

                    b.Navigation("ThreatName")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Ecosystem", b =>
                {
                    b.Navigation("Species");

                    b.Navigation("Threats");
                });
#pragma warning restore 612, 618
        }
    }
}
